// This file is generated by Firebase Studio.
'use server';
/**
 * @fileOverview Summarizes key knowledge gaps based on user questions within a specific domain.
 *
 * - summarizeKnowledgeGap - A function that summarizes knowledge gaps.
 * - SummarizeKnowledgeGapInput - The input type for the summarizeKnowledgeGap function.
 * - SummarizeKnowledgeGapOutput - The return type for the summarizeKnowledgeGap function.
 */

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';

const SummarizeKnowledgeGapInputSchema = z.object({
  domain: z.string().describe('The domain of knowledge (e.g., Education, Healthcare, Finance, Retail).'),
  initialQuestions: z.string().describe('The user\u0027s initial questions within the specified domain.'),
});
export type SummarizeKnowledgeGapInput = z.infer<typeof SummarizeKnowledgeGapInputSchema>;

const SummarizeKnowledgeGapOutputSchema = z.object({
  summary: z.string().describe('A summary of the key knowledge gaps based on the initial questions.'),
});
export type SummarizeKnowledgeGapOutput = z.infer<typeof SummarizeKnowledgeGapOutputSchema>;

export async function summarizeKnowledgeGap(input: SummarizeKnowledgeGapInput): Promise<SummarizeKnowledgeGapOutput> {
  return summarizeKnowledgeGapFlow(input);
}

const prompt = ai.definePrompt({
  name: 'summarizeKnowledgeGapPrompt',
  input: {
    schema: z.object({
      domain: z.string().describe('The domain of knowledge.'),
      initialQuestions: z.string().describe('The user\u0027s initial questions.'),
    }),
  },
  output: {
    schema: z.object({
      summary: z.string().describe('A summary of the key knowledge gaps.'),
    }),
  },
  prompt: `You are an expert consultant in the domain of {{{domain}}}.

  Based on the user's initial questions, identify and summarize the key knowledge gaps that the user should focus on.

  Initial Questions: {{{initialQuestions}}}

  Summary:`,
});

const summarizeKnowledgeGapFlow = ai.defineFlow<
  typeof SummarizeKnowledgeGapInputSchema,
  typeof SummarizeKnowledgeGapOutputSchema
>(
  {
    name: 'summarizeKnowledgeGapFlow',
    inputSchema: SummarizeKnowledgeGapInputSchema,
    outputSchema: SummarizeKnowledgeGapOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
